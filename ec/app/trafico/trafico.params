parent.0 = ../../multiobjective/nsga2/nsga2.params

# Defino el problema
eval.problem = ec.app.trafico.Trafico

# Defino las variables generales al problema
pop.subpop.0.size =                     80
generations =                           5001

# Defino la representacion
pop.subpop.0.species = ec.vector.FloatVectorSpecies
pop.subpop.0.species.ind = ec.vector.FloatVectorIndividual
pop.subpop.0.species.genome-size	= 120
pop.subpop.0.species.min-gene	= 0
pop.subpop.0.species.max-gene 	= 3.999999999999999999	

#Dos objetivos, los dos se minimizan
pop.subpop.0.species.fitness.num-objectives = 2
pop.subpop.0.species.fitness.maximize = false


#Intermediate crossover (pagina 117 manual de ECJ)
pop.subpop.0.species.crossover-type	= intermediate
pop.subpop.0.species.line-extension = 0.25

#Mutacion gaussiana (pagina 122 manual de ECJ)
pop.subpop.0.species.mutation-type      = gauss
pop.subpop.0.species.mutation-stdev = 0.1
pop.subpop.0.species.out-of-bounds-retries = 20


pop.subpop.0.species.pipe		     	= ec.vector.breed.VectorMutationPipeline
pop.subpop.0.species.pipe.likelihood        	= 0.1

pop.subpop.0.species.pipe.source.0		= ec.vector.breed.VectorCrossoverPipeline
pop.subpop.0.species.pipe.source.0.likelihood 	= 0.75
pop.subpop.0.species.pipe.source.0.source.0 	= ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.0.source.1 	= same
select.tournament.size 				= 2


#Se inicializa la semilla del generador de numeros aleatorios
seed.0 = time

#Estadisticas
stat.silent.print = true
stat.modulo.front = 1000
#silent = true

#Numero de ejecuciones
jobs = 1